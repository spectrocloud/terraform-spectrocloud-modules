name: "profile-all-tiers-modules2"
version: "1.0.0"
context: "project"
description: "created from tf-modules"
cloud: all
packs:
  - name: "container-tier"
    type: "container"
    registry_uid: "test"
    source_app_tier: ""
    values: "pack:\n  namespace: \"{{.spectro.system.appdeployment.tiername}}-ns\"\n  releaseNameOverride: \"{{.spectro.system.appdeployment.tiername}}\"\npostReadinessHooks:\n  outputParameters:\n    - name: CONTAINER_SVC\n      type: lookupSecret\n      spec:\n        namespace: \"{{.spectro.system.appdeployment.tiername}}-ns\"\n        secretName: \"{{.spectro.system.appdeployment.tiername}}-custom-secret\"\n        ownerReference:\n          apiVersion: v1\n          kind: Service\n          name: \"{{.spectro.system.appdeployment.tiername}}-svc\"\n        keyToCheck: metadata.name\n    - name: CONTAINER_SVC_PORT\n      type: lookupSecret\n      spec:\n        namespace: \"{{.spectro.system.appdeployment.tiername}}-ns\"\n        secretName: \"{{.spectro.system.appdeployment.tiername}}-custom-secret\"\n        ownerReference:\n          apiVersion: v1\n          kind: Service\n          name: \"{{.spectro.system.appdeployment.tiername}}-svc\"\n        keyToCheck: spec.ports[0].port\n        keyFormat: string, number\ncontainerService:\n  serviceName: \"{{.spectro.system.appdeployment.tiername}}-svc\"\n  registryUrl: \"\"\n  image: alphine\n  access: public\n  ports:\n    - \"8080\"\n  serviceType: LoadBalancer\n  args:\n    - $TEST\n  command:\n    - sh\n    - ./start.sh\n  env:\n    - name: TEST\n      value: \"true\"\n  volumeName: TestVolume\n  volumeSize: 10\n  pathToMount: /pack\n"
  - name: "kafka-tier"
    type: "helm"
    registry_uid: "test"
    source_app_tier: ""
    manifest:
      name: "kafka"
      content: "annotations:\n  category: Infrastructure\napiVersion: v2\nappVersion: 3.3.1\ndependencies:\n  - condition: zookeeper.enabled\n    name: zookeeper\n    repository: https://charts.bitnami.com/bitnami\n    version: 11.x.x\n  - name: common\n    repository: https://charts.bitnami.com/bitnami\n    tags:\n      - bitnami-common\n    version: 2.x.x\ndescription: Apache Kafka is a distributed streaming platform designed to build real-time pipelines and can be used as a message broker or as a replacement for a log aggregation solution for big data applications.\nengine: gotpl\nhome: https://github.com/bitnami/charts/tree/main/bitnami/kafka\nicon: https://bitnami.com/assets/stacks/kafka/img/kafka-stack-220x234.png\nkeywords:\n  - kafka\n  - zookeeper\n  - streaming\n  - producer\n  - consumer\nmaintainers:\n  - name: Bitnami\n    url: https://github.com/bitnami/charts\nname: kafka\nsources:\n  - https://github.com/bitnami/containers/tree/main/bitnami/kafka\n  - https://kafka.apache.org/\nversion: 20.0.0"
  - name: "manifest-tier"
    type: "manifest"
    install_order: 0
    manifest:
      name: "test-manifest-3"
      content: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80"
  - name: "minio-operator-stage"
    type: "operator-instance"
    source_app_tier: ""
    properties:
      "minioUsername"     : "miniostaging"
      "minioUserPassword" : "test123!wewe!"
      "volumeSize"        : "10"